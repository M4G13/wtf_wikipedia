{"version":3,"file":"wtf-plugin-api.js","sources":["../src/_fns.js","../src/getRedirects.js","../src/getIncoming.js","../src/getPageViews.js","../src/getTransclusions.js","../src/getCategory.js","../src/getRandom.js","../src/getRandomCategory.js","../node_modules/slow/builds/slow.mjs","../src/fetchList.js","../src/index.js"],"sourcesContent":["exports.normalize = function (title = '') {\n  title = title.replace(/ /g, '_')\n  title = title.trim()\n  title = encodeURIComponent(title)\n  return title\n}\n\nexports.defaults = {\n  lang: 'en',\n  path: 'w/api.php'\n}\n\nexports.toUrlParams = function (obj) {\n  let arr = Object.entries(obj).map(([key, value]) => {\n    return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`\n  })\n  return arr.join('&')\n}\n\nexports.fetchOne = function (url, http, prop) {\n  return http(url).then((res) => {\n    let pages = Object.keys(res.query.pages || {})\n    if (pages.length === 0) {\n      return { pages: [], cursor: null }\n    }\n    return {\n      pages: res.query.pages[pages[0]][prop] || [],\n      cursor: res.continue\n    }\n  })\n}\n","const { normalize, defaults, toUrlParams, fetchOne } = require('./_fns')\n\nconst params = {\n  action: 'query',\n  rdnamespace: 0,\n  prop: 'redirects',\n  rdlimit: 500,\n  format: 'json',\n  origin: '*',\n  redirects: true\n}\n\nconst makeUrl = function (title, options, append) {\n  let url = `https://${options.lang}.wikipedia.org/${options.path}?`\n  if (options.domain) {\n    url = `https://${options.domain}/${options.path}?`\n  }\n  url += toUrlParams(params)\n  url += `&titles=${normalize(title)}`\n  if (append) {\n    url += append\n  }\n  return url\n}\n\nconst getRedirects = async function (title, http) {\n  let list = []\n  let getMore = true\n  let append = ''\n  while (getMore) {\n    let url = makeUrl(title, defaults, append)\n    let { pages, cursor } = await fetchOne(url, http, 'redirects')\n    list = list.concat(pages)\n    if (cursor && cursor.rdcontinue) {\n      append = '&rdcontinue=' + cursor.lhcontinue\n    } else {\n      getMore = false\n    }\n  }\n  return list\n}\nmodule.exports = getRedirects\n","const { normalize, defaults, toUrlParams, fetchOne } = require('./_fns')\n\nconst params = {\n  action: 'query',\n  lhnamespace: 0,\n  prop: 'linkshere',\n  lhshow: '!redirect',\n  lhlimit: 500,\n  format: 'json',\n  origin: '*',\n  redirects: true\n}\n\nconst makeUrl = function (title, options, append) {\n  let url = `https://${options.lang}.wikipedia.org/${options.path}?`\n  if (options.domain) {\n    url = `https://${options.domain}/${options.path}?`\n  }\n  url += toUrlParams(params)\n  url += `&titles=${normalize(title)}`\n  if (append) {\n    url += append\n  }\n  return url\n}\n\nconst getIncoming = async function (title, http) {\n  let list = []\n  let getMore = true\n  let append = ''\n  while (getMore) {\n    let url = makeUrl(title, defaults, append)\n    let { pages, cursor } = await fetchOne(url, http, 'linkshere')\n    list = list.concat(pages)\n    if (cursor && cursor.lhcontinue) {\n      append = '&lhcontinue=' + cursor.lhcontinue\n    } else {\n      getMore = false\n    }\n  }\n  return list\n}\nmodule.exports = getIncoming\n","const { normalize, defaults, toUrlParams } = require('./_fns')\n\nconst params = {\n  action: 'query',\n  prop: 'pageviews',\n  format: 'json',\n  origin: '*',\n  redirects: true\n}\n\nconst makeUrl = function (title, options, append) {\n  let url = `https://${options.lang}.wikipedia.org/${options.path}?`\n  if (options.domain) {\n    url = `https://${options.domain}/${options.path}?`\n  }\n  url += toUrlParams(params)\n  url += `&titles=${normalize(title)}`\n  if (append) {\n    url += append\n  }\n  return url\n}\n\nconst getPageViews = function (doc, http) {\n  let url = makeUrl(doc.title(), defaults)\n  return http(url).then((res) => {\n    let pages = Object.keys(res.query.pages || {})\n    if (pages.length === 0) {\n      return []\n    }\n    return res.query.pages[pages[0]].pageviews || []\n  })\n}\nmodule.exports = getPageViews\n","const { normalize, defaults, toUrlParams, fetchOne } = require('./_fns')\n\nconst params = {\n  action: 'query',\n  tinamespace: 0,\n  prop: 'transcludedin',\n  tilimit: 500,\n  format: 'json',\n  origin: '*',\n  redirects: true\n}\n\nconst makeUrl = function (title, options, append) {\n  let url = `https://${options.lang}.wikipedia.org/${options.path}?`\n  if (options.domain) {\n    url = `https://${options.domain}/${options.path}?`\n  }\n  url += toUrlParams(params)\n  url += `&titles=${normalize(title)}`\n  // support custom cursor params\n  if (append) {\n    url += append\n  }\n  return url\n}\n\n// fetch all the pages that use a specific template\nconst getTransclusions = async function (template, _options, http) {\n  let list = []\n  let getMore = true\n  let append = ''\n  while (getMore) {\n    let url = makeUrl(template, defaults, append)\n    let { pages, cursor } = await fetchOne(url, http, 'transcludedin')\n    list = list.concat(pages)\n    if (cursor && cursor.ticontinue) {\n      append = '&ticontinue=' + cursor.ticontinue\n    } else {\n      getMore = false\n    }\n  }\n  return list\n}\nmodule.exports = getTransclusions\n","const { normalize, defaults, toUrlParams } = require('./_fns')\n\nconst params = {\n  action: 'query',\n  list: 'categorymembers',\n  cmlimit: 500,\n  cmtype: 'page|subcat',\n  cmnamespace: 0,\n  format: 'json',\n  origin: '*',\n  redirects: true\n}\n\nconst fetchIt = function (url, http, prop) {\n  return http(url).then((res) => {\n    let pages = Object.keys(res.query[prop] || {})\n    if (pages.length === 0) {\n      return { pages: [], cursor: null }\n    }\n    let arr = pages.map((k) => res.query[prop][k])\n    return {\n      pages: arr,\n      cursor: res.continue\n    }\n  })\n}\n\nconst makeUrl = function (title, options, append) {\n  let url = `https://${options.lang}.wikipedia.org/${options.path}?`\n  if (options.domain) {\n    url = `https://${options.domain}/${options.path}?`\n  }\n  url += toUrlParams(params)\n  if (/^Category/i.test(title) === false) {\n    title = 'Category:' + title\n  }\n  url += `&cmtitle=${normalize(title)}`\n  if (append) {\n    url += append\n  }\n  return url\n}\n\nconst getCategory = async function (title, options, http) {\n  options = { ...defaults, ...options }\n  let list = []\n  let getMore = true\n  let append = ''\n  while (getMore) {\n    let url = makeUrl(title, options, append)\n    let { pages, cursor } = await fetchIt(url, http, 'categorymembers')\n    list = list.concat(pages)\n    if (cursor && cursor.cmcontinue) {\n      append = '&cmcontinue=' + cursor.lhcontinue\n    } else {\n      getMore = false\n    }\n  }\n  return list\n}\nmodule.exports = getCategory\n","const { defaults, toUrlParams } = require('./_fns')\n\nconst params = {\n  action: 'query',\n  generator: 'random',\n  grnnamespace: '0',\n  prop: 'pageprops',\n  grnlimit: '1',\n  rvslots: 'main',\n  format: 'json',\n  origin: '*',\n  redirects: 'true'\n}\n\nconst fetchIt = function (url, http) {\n  return http(url).then((res) => {\n    let pages = Object.keys(res.query.pages || {})\n    if (pages.length === 0) {\n      return { pages: [], cursor: null }\n    }\n    return res.query.pages[pages[0]]\n  })\n}\n\nconst makeUrl = function (options) {\n  let url = `https://${options.lang}.wikipedia.org/${options.path}?`\n  if (options.domain) {\n    url = `https://${options.domain}/${options.path}?`\n  }\n  url += toUrlParams(params)\n  return url\n}\n\nconst getRandom = async function (_options, http) {\n  let url = makeUrl(defaults)\n  let page = await fetchIt(url, http)\n  return page\n}\nmodule.exports = getRandom\n","const { defaults, toUrlParams } = require('./_fns')\n\nconst params = {\n  format: 'json',\n  action: 'query',\n  generator: 'random',\n  grnnamespace: 14,\n  prop: 'revisions',\n  grnlimit: 1,\n  origin: '*'\n}\n\nconst randomCategory = function (options = {}, http) {\n  options = Object.assign({}, defaults, options)\n  let url = `https://${options.lang}.wikipedia.org/${options.path}?`\n  if (options.domain) {\n    url = `https://${options.domain}/${options.path}?`\n  }\n  url += toUrlParams(params)\n  return http(url)\n    .then((res) => {\n      try {\n        let o = res.query.pages\n        let key = Object.keys(o)[0]\n        return o[key].title\n      } catch (e) {\n        throw e\n      }\n    })\n    .catch((e) => {\n      console.error(e)\n      return null\n    })\n}\nmodule.exports = randomCategory\n","/* slow 1.1.0 MIT */\n//only do foo promises at a time.\nvar rateLimit = function rateLimit(arr, fn) {\n  var limit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 5;\n  return new Promise(function (resolve, reject) {\n    //some validation\n    if (!arr || !fn) {\n      reject('Error: missing required parameters to rate-limit function');\n      return;\n    }\n\n    if (arr.length === 0) {\n      resolve([]);\n      return;\n    }\n\n    var results = [];\n    var n = limit - 1;\n    var pending = 0; //simple recursion, but with then/finally\n\n    var go = function go(i) {\n      pending += 1;\n      var p = fn(arr[i]);\n\n      if (!p.then) {\n        reject('Error: function must return a promise');\n        return;\n      }\n\n      p.then(function (r) {\n        results[i] = r;\n      });\n      p[\"catch\"](function (e) {\n        console.error(e);\n        results[i] = null;\n      });\n      p[\"finally\"](function () {\n        pending -= 1;\n        n += 1; //should we keep going?\n\n        if (arr.length >= n + 1) {\n          go(n);\n        } else if (pending <= 0) {\n          //no more to start - are we the last to finish?\n          resolve(results);\n        }\n      });\n    }; //fire-off first-n items\n\n\n    var init = arr.length < limit ? arr.length : limit;\n\n    for (var i = 0; i < init; i += 1) {\n      go(i);\n    }\n  });\n};\n\nvar rateLimit_1 = rateLimit;\n\nvar methods = {\n  one: function one(arr, fn) {\n    return rateLimit_1(arr, fn, 1);\n  },\n  two: function two(arr, fn) {\n    return rateLimit_1(arr, fn, 2);\n  },\n  three: function three(arr, fn) {\n    return rateLimit_1(arr, fn, 3);\n  },\n  four: function four(arr, fn) {\n    return rateLimit_1(arr, fn, 4);\n  },\n  five: function five(arr, fn) {\n    return rateLimit_1(arr, fn, 5);\n  },\n  ten: function ten(arr, fn) {\n    return rateLimit_1(arr, fn, 10);\n  },\n  fifteen: function fifteen(arr, fn) {\n    return rateLimit_1(arr, fn, 15);\n  }\n};\nmethods.serial = methods.one;\nmethods.linear = methods.one;\nmethods.crawl = methods.three;\nmethods.walk = methods.five;\nmethods.run = methods.ten;\nmethods.sprint = methods.fifteen;\nvar src = methods;\n\nexport default src;\n","const slow = require('slow')\nconst isObject = function (obj) {\n  return obj && Object.prototype.toString.call(obj) === '[object Object]'\n}\n\nconst chunkBy = function (arr, chunkSize = 5) {\n  let groups = []\n  for (let i = 0; i < arr.length; i += chunkSize) {\n    groups.push(arr.slice(i, i + chunkSize))\n  }\n  return groups\n}\n\nconst fetchList = function (pages, options, wtf) {\n  // support a list of strings, or objects\n  if (pages[0] && isObject(pages[0])) {\n    pages = pages.map((o) => o.title)\n  }\n  // fetch in groups of 5\n  let groups = chunkBy(pages)\n\n  const doit = function (group) {\n    return wtf.fetch(group, options) //returns a promise\n  }\n  //only allow three requests at a time\n  return slow.three(groups, doit).then((res) => {\n    // flatten into one list\n    return res.reduce((arr, a) => {\n      arr = arr.concat(a)\n      return arr\n    })\n  })\n}\nmodule.exports = fetchList\n","const getRedirects = require('./getRedirects')\nconst getIncoming = require('./getIncoming')\nconst getPageViews = require('./getPageViews')\nconst getTransclusions = require('./getTransclusions')\nconst getCategory = require('./getCategory')\nconst getRandomPage = require('./getRandom')\nconst getRandomCategory = require('./getRandomCategory')\nconst fetchList = require('./fetchList')\n\nconst addMethod = function (models) {\n  // doc methods\n  models.Doc.prototype.getRedirects = function () {\n    return getRedirects(this.title(), models.http)\n  }\n  models.Doc.prototype.getIncoming = function () {\n    return getIncoming(this.title(), models.http)\n  }\n  models.Doc.prototype.getPageViews = function () {\n    return getPageViews(this, models.http)\n  }\n\n  // constructor methods\n  models.wtf.getRandomPage = function (options) {\n    return getRandomPage(options, models.http)\n  }\n  models.wtf.getRandomCategory = function (options) {\n    return getRandomCategory(options, models.http)\n  }\n  models.wtf.getTemplatePages = function (template, options) {\n    return getTransclusions(template, options, models.http)\n  }\n  models.wtf.getCategoryPages = function (category, options) {\n    return getCategory(category, options, models.http)\n  }\n  models.wtf.fetchList = function (list, options) {\n    return fetchList(list, options, models.wtf)\n  }\n  models.wtf.getIncoming = function (title) {\n    return getIncoming(title, models.http)\n  }\n  models.wtf.getRedirects = function (title) {\n    return getRedirects(title, models.http)\n  }\n}\nmodule.exports = addMethod\n"],"names":["_fns","normalize","title","replace","trim","encodeURIComponent","defaults","lang","path","toUrlParams","obj","arr","Object","entries","map","key","value","join","fetchOne","url","http","prop","then","res","pages","keys","query","length","cursor","continue","require$$0","params","action","rdnamespace","rdlimit","format","origin","redirects","makeUrl","options","append","domain","getRedirects","list","getMore","concat","rdcontinue","lhcontinue","getRedirects_1","lhnamespace","lhshow","lhlimit","getIncoming","getIncoming_1","getPageViews","doc","pageviews","getPageViews_1","tinamespace","tilimit","getTransclusions","template","_options","ticontinue","getTransclusions_1","cmlimit","cmtype","cmnamespace","fetchIt","k","test","getCategory","cmcontinue","getCategory_1","generator","grnnamespace","grnlimit","rvslots","getRandom","page","getRandom_1","randomCategory","assign","o","e","catch","console","error","getRandomCategory","rateLimit","fn","limit","arguments","undefined","Promise","resolve","reject","results","n","pending","go","i","p","r","init","rateLimit_1","methods","one","two","three","four","five","ten","fifteen","serial","linear","crawl","walk","run","sprint","src","slow","isObject","prototype","toString","call","chunkBy","chunkSize","groups","push","slice","fetchList","wtf","doit","group","fetch","reduce","a","fetchList_1","require$$1","require$$2","require$$3","require$$4","getRandomPage","require$$5","require$$6","require$$7","addMethod","models","Doc","getTemplatePages","getCategoryPages","category"],"mappings":"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"}