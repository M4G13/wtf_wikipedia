{"version":3,"file":"wtf-plugin-markdown.js","sources":["../src/01-doc.js","../src/02-section.js","../src/03-paragraph.js","../src/_lib/smartReplace.js","../src/04-sentence.js","../src/05-link.js","../src/image.js","../src/_lib/pad.js","../src/infobox.js","../src/list.js","../src/reference.js","../src/table.js","../src/index.js"],"sourcesContent":["const defaults = {\n  redirects: true,\n  infoboxes: true,\n  templates: true,\n  sections: true\n}\n//we should try to make this look like the wikipedia does, i guess.\nconst softRedirect = function (doc) {\n  let link = doc.redirectTo()\n  let href = link.page\n  href = './' + href.replace(/ /g, '_')\n  if (link.anchor) {\n    href += '#' + link.anchor\n  }\n  return `↳ [${link.text}](${href})`\n}\n\n//turn a Doc object into a markdown string\nconst toMarkdown = function (options) {\n  options = Object.assign({}, defaults, options)\n  let data = this\n  let md = ''\n  //if it's a redirect page, give it a 'soft landing':\n  if (options.redirects === true && this.isRedirect() === true) {\n    return softRedirect(this) //end it here\n  }\n  //render infoboxes (up at the top)\n  if (options.infoboxes === true && options.templates === true) {\n    md += this.infoboxes()\n      .map((infobox) => infobox.markdown(options))\n      .join('\\n\\n')\n  }\n  //render each section\n  if (options.sections === true || options.paragraphs === true || options.sentences === true) {\n    md += data\n      .sections()\n      .map((s) => s.markdown(options))\n      .join('\\n\\n')\n  }\n  //default false\n  if (options.references === true) {\n    md += '## References'\n    md += this.citations()\n      .map((c) => c.json(options))\n      .join('\\n')\n  }\n  return md\n}\nmodule.exports = toMarkdown\n","const defaults = {\n  headers: true,\n  images: true,\n  tables: true,\n  lists: true,\n  paragraphs: true\n}\n\nconst doSection = function (options) {\n  options = Object.assign({}, defaults, options)\n  let md = ''\n\n  //make the header\n  if (options.headers === true && this.title()) {\n    let header = '##'\n    for (let i = 0; i < this.depth(); i += 1) {\n      header += '#'\n    }\n    md += header + ' ' + this.title() + '\\n'\n  }\n\n  //put any images under the header\n  if (options.images === true) {\n    let images = this.images()\n    if (images.length > 0) {\n      md += images.map((img) => img.markdown()).join('\\n')\n      md += '\\n'\n    }\n  }\n\n  //make a markdown table\n  if (options.tables === true) {\n    let tables = this.tables()\n    if (tables.length > 0) {\n      md += '\\n'\n      md += tables.map((table) => table.markdown(options)).join('\\n')\n      md += '\\n'\n    }\n  }\n\n  //make a markdown bullet-list\n  if (options.lists === true) {\n    let lists = this.lists()\n    if (lists.length > 0) {\n      md += lists.map((list) => list.markdown(options)).join('\\n')\n      md += '\\n'\n    }\n  }\n\n  //finally, write the sentence text.\n  if (options.paragraphs === true || options.sentences === true) {\n    md += this.paragraphs()\n      .map((p) => {\n        return p\n          .sentences()\n          .map((s) => s.markdown(options))\n          .join(' ')\n      })\n      .join('\\n\\n')\n  }\n\n  return md\n}\nmodule.exports = doSection\n","const defaults = {\n  sentences: true\n}\n\nconst toMarkdown = function (options) {\n  options = Object.assign({}, defaults, options)\n  let md = ''\n  if (options.sentences === true) {\n    md += this.sentences().reduce((str, s) => {\n      str += s.markdown(options) + '\\n'\n      return str\n    }, {})\n  }\n  return md\n}\nmodule.exports = toMarkdown\n","//escape a string like 'fun*2.Co' for a regExpr\nfunction escapeRegExp(str) {\n  return str.replace(/[\\-[\\]/{}()*+?.\\\\^$|]/g, '\\\\$&')\n}\n\n//sometimes text-replacements can be ambiguous - words used multiple times..\nconst smartReplace = function (all, text, result) {\n  if (!text || !all) {\n    return all\n  }\n\n  if (typeof all === 'number') {\n    all = String(all)\n  }\n  text = escapeRegExp(text)\n  //try a word-boundary replace\n  let reg = new RegExp('\\\\b' + text + '\\\\b')\n  if (reg.test(all) === true) {\n    all = all.replace(reg, result)\n  } else {\n    //otherwise, fall-back to a much messier, dangerous replacement\n    // console.warn('missing \\'' + text + '\\'');\n    all = all.replace(text, result)\n  }\n  return all\n}\n\nmodule.exports = smartReplace\n","const smartReplace = require('./_lib/smartReplace')\n\nconst defaults = {\n  links: true,\n  formatting: true\n}\n\n//create links, bold, italic in markdown\nconst toMarkdown = function (options) {\n  options = Object.assign({}, defaults, options)\n  let md = this.text()\n  //turn links back into links\n  if (options.links === true) {\n    this.links().forEach((link) => {\n      let mdLink = link.markdown()\n      let str = link.text() || link.page()\n      md = smartReplace(md, str, mdLink)\n    })\n  }\n  //turn bolds into **bold**\n  if (options.formatting === true) {\n    this.bolds().forEach((b) => {\n      md = smartReplace(md, b, '**' + b + '**')\n    })\n    //support *italics*\n    this.italics().forEach((i) => {\n      md = smartReplace(md, i, '*' + i + '*')\n    })\n  }\n  return md\n}\nmodule.exports = toMarkdown\n","// add `[text](href)` to the text\nconst toMarkdown = function () {\n  let href = this.href()\n  href = href.replace(/ /g, '_')\n  // href = encodeURIComponent(href)\n  let str = this.text() || this.page()\n  return '[' + str + '](' + href + ')'\n}\nmodule.exports = toMarkdown\n","//markdown images are like this: ![alt text](href)\nconst toMarkdown = function () {\n  let alt = this.data.file.replace(/^(file|image):/i, '')\n  alt = alt.replace(/\\.(jpg|jpeg|png|gif|svg)/i, '')\n  return '![' + alt + '](' + this.thumbnail() + ')'\n}\nmodule.exports = toMarkdown\n","//center-pad each cell, to make the table more legible\nconst pad = (str, cellWidth) => {\n  str = str || ''\n  str = String(str)\n  cellWidth = cellWidth || 15\n  let diff = cellWidth - str.length\n  diff = Math.ceil(diff / 2)\n  for (let i = 0; i < diff; i += 1) {\n    str = ' ' + str\n    if (str.length < cellWidth) {\n      str = str + ' '\n    }\n  }\n  return str\n}\nmodule.exports = pad\n","const dontDo = {\n  image: true,\n  caption: true,\n  alt: true,\n  signature: true,\n  'signature alt': true\n}\n\nconst defaults = {\n  images: true\n}\n\n//\nconst pad = require('./_lib/pad')\n\n// render an infobox as a table with two columns, key + value\nconst doInfobox = function (options) {\n  options = Object.assign({}, defaults, options)\n  let md = '|' + pad('', 35) + '|' + pad('', 30) + '|\\n'\n  md += '|' + pad('---', 35) + '|' + pad('---', 30) + '|\\n'\n  //todo: render top image here (somehow)\n  Object.keys(this.data).forEach((k) => {\n    if (dontDo[k] === true) {\n      return\n    }\n    let key = '**' + k + '**'\n    let s = this.data[k]\n    let val = s.markdown(options)\n    //markdown is more newline-sensitive than wiki\n    val = val.split(/\\n/g).join(', ')\n    md += '|' + pad(key, 35) + '|' + pad(val, 30) + ' |\\n'\n  })\n  return md\n}\nmodule.exports = doInfobox\n","//\nconst toMarkdown = function (options) {\n  return this.lines()\n    .map((s) => {\n      let str = s.markdown(options)\n      return ' * ' + str\n    })\n    .join('\\n')\n}\nmodule.exports = toMarkdown\n","//\nconst toMarkdown = function () {\n  if (this.data && this.data.url && this.data.title) {\n    return `⌃ [${this.data.title}](${this.data.url})`\n  } else if (this.data.encyclopedia) {\n    return `⌃ ${this.data.encyclopedia}`\n  } else if (this.data.title) {\n    //cite book, etc\n    let str = this.data.title\n    if (this.data.author) {\n      str += this.data.author\n    }\n    if (this.data.first && this.data.last) {\n      str += this.data.first + ' ' + this.data.last\n    }\n    return `⌃ ${str}`\n  } else if (this.inline) {\n    return `⌃ ${this.inline.markdown()}`\n  }\n  return ''\n}\nmodule.exports = toMarkdown\n","const pad = require('./_lib/pad')\n/* this is a markdown table:\n| Tables        | Are           | Cool  |\n| ------------- |:-------------:| -----:|\n| col 3 is      | right-aligned | $1600 |\n| col 2 is      | centered      |   $12 |\n| zebra stripes | are neat      |    $1 |\n*/\n\nconst makeRow = (arr) => {\n  arr = arr.map((s) => pad(s, 14))\n  return '| ' + arr.join(' | ') + ' |'\n}\n\n//markdown tables are weird\nconst doTable = function (options) {\n  let md = ''\n  if (!this || this.length === 0) {\n    return md\n  }\n  let rows = this.data\n  let keys = Object.keys(rows[0])\n  //first, grab the headers\n  //remove auto-generated number keys\n  let headers = keys.map((k) => {\n    if (/^col[0-9]/.test(k) === true) {\n      return ''\n    }\n    return k\n  })\n  //draw the header (necessary!)\n  md += makeRow(headers) + '\\n'\n  md += makeRow(headers.map(() => '---')) + '\\n'\n  //do each row..\n  md += rows\n    .map((row) => {\n      //each column..\n      let arr = keys.map((k) => {\n        if (!row[k]) {\n          return ''\n        }\n        return row[k].markdown(options) || ''\n      })\n      //make it a nice padded row\n      return makeRow(arr)\n    })\n    .join('\\n')\n  return md + '\\n'\n}\nmodule.exports = doTable\n","const doc = require('./01-doc')\nconst section = require('./02-section')\nconst paragraph = require('./03-paragraph')\nconst sentence = require('./04-sentence')\nconst link = require('./05-link')\nconst image = require('./image')\nconst infobox = require('./infobox')\nconst list = require('./list')\nconst reference = require('./reference')\nconst table = require('./table')\n\nconst plugin = function (models) {\n  models.Doc.prototype.markdown = doc\n  models.Section.prototype.markdown = section\n  models.Paragraph.prototype.markdown = paragraph\n  models.Sentence.prototype.markdown = sentence\n  models.Link.prototype.markdown = link\n  models.Image.prototype.markdown = image\n  models.Infobox.prototype.markdown = infobox\n  models.Table.prototype.markdown = table\n  models.List.prototype.markdown = list\n  models.Reference.prototype.markdown = reference\n}\nmodule.exports = plugin\n"],"names":["defaults","redirects","infoboxes","templates","sections","softRedirect","doc","link","redirectTo","href","page","replace","anchor","text","toMarkdown","options","Object","assign","data","md","isRedirect","map","infobox","markdown","join","paragraphs","sentences","s","references","citations","c","json","_01Doc","headers","images","tables","lists","doSection","title","header","i","depth","length","img","table","list","p","_02Section","reduce","str","_03Paragraph","escapeRegExp","smartReplace","all","result","String","reg","RegExp","test","smartReplace_1","require$$0","links","formatting","forEach","mdLink","bolds","b","italics","_04Sentence","_05Link","alt","file","thumbnail","image","pad","cellWidth","diff","Math","ceil","pad_1","dontDo","caption","signature","doInfobox","keys","k","key","val","split","lines","url","encyclopedia","author","first","last","inline","reference","makeRow","arr","doTable","rows","row","section","require$$1","paragraph","require$$2","sentence","require$$3","require$$4","require$$5","require$$6","require$$7","require$$8","require$$9","plugin","models","Doc","prototype","Section","Paragraph","Sentence","Link","Image","Infobox","Table","List","Reference","src"],"mappings":"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"}