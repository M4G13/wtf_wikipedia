{"version":3,"file":"wtf-plugin-html.js","sources":["../src/01-doc.js","../src/02-section.js","../src/03-paragraph.js","../src/_lib/smartReplace.js","../src/04-sentence.js","../src/05-link.js","../src/infobox.js","../src/image.js","../src/list.js","../src/reference.js","../src/table.js","../src/index.js"],"sourcesContent":["const defaults = {\n  title: true,\n  infoboxes: true,\n  headers: true,\n  sections: true,\n  links: true\n}\n//we should try to make this look like the wikipedia does, i guess.\nconst softRedirect = function (doc) {\n  let link = doc.redirectTo()\n  let href = link.page\n  href = './' + href.replace(/ /g, '_')\n  if (link.anchor) {\n    href += '#' + link.anchor\n  }\n  return `  <div class=\"redirect\">\n  ↳ <a class=\"link\" href=\"./${href}\">${link.text}</a>\n  </div>`\n}\n\n//turn a Doc object into a HTML string\nconst toHtml = function (options) {\n  options = Object.assign({}, defaults, options)\n  let html = ''\n  //add page title\n  if (options.title === true && this._title) {\n    html += '<title>' + this._title + '</title>\\n'\n  }\n  //if it's a redirect page, give it a 'soft landing':\n  if (this.isRedirect() === true) {\n    html += softRedirect(this)\n    return html\n  }\n  //render infoboxes (up at the top)\n  if (options.infoboxes === true) {\n    html += this.infoboxes()\n      .map((i) => i.html(options))\n      .join('\\n')\n  }\n  //render each section\n  if (options.sections === true || options.paragraphs === true || options.sentences === true) {\n    html += this.sections()\n      .map((s) => s.html(options))\n      .join('\\n')\n  }\n  //default off\n  if (options.references === true) {\n    html += '<h2>References</h2>'\n    html += this.references()\n      .map((c) => c.html(options))\n      .join('\\n')\n  }\n  return html\n}\nmodule.exports = toHtml\n","const defaults = {\n  headers: true,\n  images: true,\n  tables: true,\n  lists: true,\n  paragraphs: true\n}\n\nconst doSection = function (options) {\n  options = Object.assign({}, defaults, options)\n  let html = ''\n  //make the header\n  if (options.headers === true && this.title()) {\n    let num = 1 + this.depth()\n    html += '  <h' + num + '>' + this.title() + '</h' + num + '>'\n    html += '\\n'\n  }\n  //put any images under the header\n  if (options.images === true) {\n    let imgs = this.images()\n    if (imgs.length > 0) {\n      html += imgs.map((image) => image.html(options)).join('\\n')\n    }\n  }\n  //make a html table\n  if (options.tables === true) {\n    html += this.tables()\n      .map((t) => t.html(options))\n      .join('\\n')\n  }\n  //make a html bullet-list\n  if (options.lists === true) {\n    html += this.lists()\n      .map((list) => list.html(options))\n      .join('\\n')\n  }\n\n  //finally, write the sentence text.\n  if (options.paragraphs === true && this.paragraphs().length > 0) {\n    html += '  <div class=\"text\">\\n'\n    this.paragraphs().forEach((p) => {\n      html += '    <p class=\"paragraph\">\\n'\n      html +=\n        '      ' +\n        p\n          .sentences()\n          .map((s) => s.html(options))\n          .join(' ')\n      html += '\\n    </p>\\n'\n    })\n    html += '  </div>\\n'\n  } else if (options.sentences === true) {\n    html +=\n      '      ' +\n      this.sentences()\n        .map((s) => s.html(options))\n        .join(' ')\n  }\n  return '<div class=\"section\">\\n' + html + '</div>\\n'\n}\n\nmodule.exports = doSection\n","const defaults = {\n  sentences: true\n}\n\nconst toHtml = function (options) {\n  options = Object.assign({}, defaults, options)\n  let html = ''\n  if (options.sentences === true) {\n    html += this.sentences()\n      .map((s) => s.html(options))\n      .join('\\n')\n  }\n  return html\n}\nmodule.exports = toHtml\n","//escape a string like 'fun*2.Co' for a regExpr\nfunction escapeRegExp(str) {\n  return str.replace(/[\\-[\\]/{}()*+?.\\\\^$|]/g, '\\\\$&')\n}\n\n//sometimes text-replacements can be ambiguous - words used multiple times..\nconst smartReplace = function (all, text, result) {\n  if (!text || !all) {\n    return all\n  }\n\n  if (typeof all === 'number') {\n    all = String(all)\n  }\n  text = escapeRegExp(text)\n  //try a word-boundary replace\n  let reg = new RegExp('\\\\b' + text + '\\\\b')\n  if (reg.test(all) === true) {\n    all = all.replace(reg, result)\n  } else {\n    //otherwise, fall-back to a much messier, dangerous replacement\n    // console.warn('missing \\'' + text + '\\'');\n    all = all.replace(text, result)\n  }\n  return all\n}\n\nmodule.exports = smartReplace\n","const smartReplace = require('./_lib/smartReplace')\n\nconst defaults = {\n  links: true,\n  formatting: true\n}\n// create links, bold, italic in html\nconst doSentence = function (options) {\n  options = Object.assign({}, defaults, options)\n  let text = this.text()\n  //turn links into <a href>\n  if (options.links === true) {\n    this.links().forEach((link) => {\n      let str = link.text() || link.page()\n      let tag = link.html()\n      text = smartReplace(text, str, tag)\n    })\n  }\n  if (options.formatting === true) {\n    //support bolds\n    this.bolds().forEach((str) => {\n      let tag = '<b>' + str + '</b>'\n      text = smartReplace(text, str, tag)\n    })\n    //do italics\n    this.italics().forEach((str) => {\n      let tag = '<i>' + str + '</i>'\n      text = smartReplace(text, str, tag)\n    })\n  }\n  return '<span class=\"sentence\">' + text + '</span>'\n}\nmodule.exports = doSentence\n","const toHtml = function () {\n  let classNames = 'link'\n  let href = this.href()\n  href = href.replace(/ /g, '_')\n  let str = this.text() || this.page()\n  return `<a class=\"${classNames}\" href=\"${href}\">${str}</a>`\n}\nmodule.exports = toHtml\n","const defaults = {\n  images: true\n}\nconst dontDo = {\n  image: true,\n  caption: true,\n  alt: true,\n  signature: true,\n  'signature alt': true\n}\n\n//\nconst infobox = function (options) {\n  options = Object.assign({}, defaults, options)\n  let html = '<table class=\"infobox\">\\n'\n  html += '  <thead>\\n'\n  html += '  </thead>\\n'\n  html += '  <tbody>\\n'\n  //put image and caption on the top\n  if (options.images === true && this.data.image) {\n    html += '    <tr>\\n'\n    html += '       <td colspan=\"2\" style=\"text-align:center\">\\n'\n    html += '       ' + this.image().html() + '\\n'\n    html += '       </td>\\n'\n    if (this.data.caption || this.data.alt) {\n      let caption = this.data.caption\n        ? this.data.caption.html(options)\n        : this.data.alt.html(options)\n      html += '       <td colspan=\"2\" style=\"text-align:center\">\\n'\n      html += '         ' + caption + '\\n'\n      html += '       </td>\\n'\n    }\n    html += '    </tr>\\n'\n  }\n  Object.keys(this.data).forEach((k) => {\n    if (dontDo[k] === true) {\n      return\n    }\n    let s = this.data[k]\n    let key = k.replace(/_/g, ' ')\n    key = key.charAt(0).toUpperCase() + key.substring(1) //titlecase it\n    let val = s.html(options)\n    html += '    <tr>\\n'\n    html += '      <td>' + key + '</td>\\n'\n    html += '      <td>' + val + '</td>\\n'\n    html += '    </tr>\\n'\n  })\n  html += '  </tbody>\\n'\n  html += '</table>\\n'\n  return html\n}\nmodule.exports = infobox\n","const makeImage = function () {\n  return '  <img src=\"' + this.thumbnail() + '\" alt=\"' + this.alt() + '\"/>'\n}\nmodule.exports = makeImage\n","//\nconst toHtml = function (options) {\n  let html = '  <ul class=\"list\">\\n'\n  this.lines().forEach((s) => {\n    html += '    <li>' + s.html(options) + '</li>\\n'\n  })\n  html += '  </ul>\\n'\n  return html\n}\nmodule.exports = toHtml\n","//\nconst toHtml = function (options) {\n  if (this.data && this.data.url && this.data.title) {\n    let str = this.data.title\n    if (options.links === true) {\n      str = `<a href=\"${this.data.url}\">${str}</a>`\n    }\n    return `<div class=\"reference\">⌃ ${str} </div>`\n  }\n  if (this.data.encyclopedia) {\n    return `<div class=\"reference\">⌃ ${this.data.encyclopedia}</div>`\n  }\n  if (this.data.title) {\n    //cite book, etc\n    let str = this.data.title\n    if (this.data.author) {\n      str += this.data.author\n    }\n    if (this.data.first && this.data.last) {\n      str += this.data.first + ' ' + this.data.last\n    }\n    return `<div class=\"reference\">⌃ ${str}</div>`\n  }\n  if (this.inline) {\n    return `<div class=\"reference\">⌃ ${this.inline.html()}</div>`\n  }\n  return ''\n}\nmodule.exports = toHtml\n","//turn a json table into a html table\nconst toHtml = function (options) {\n  let rows = this.data\n  let html = '<table class=\"table\">\\n'\n  //make header\n  html += '  <thead>\\n'\n  html += '  <tr>\\n'\n\n  Object.keys(rows[0]).forEach((k) => {\n    if (/^col[0-9]/.test(k) !== true) {\n      html += '    <td>' + k + '</td>\\n'\n    }\n  })\n  html += '  </tr>\\n'\n  html += '  </thead>\\n'\n  html += '  <tbody>\\n'\n\n  //make rows\n  rows.forEach((o) => {\n    html += '  <tr>\\n'\n    Object.keys(o).forEach((k) => {\n      let val = o[k].html(options)\n      html += '    <td>' + val + '</td>\\n'\n    })\n    html += '  </tr>\\n'\n  })\n  html += '  </tbody>\\n'\n  html += '</table>\\n'\n  return html\n}\nmodule.exports = toHtml\n","const doc = require('./01-doc')\nconst section = require('./02-section')\nconst paragraph = require('./03-paragraph')\nconst sentence = require('./04-sentence')\nconst link = require('./05-link')\nconst infobox = require('./infobox')\nconst image = require('./image')\nconst list = require('./list')\nconst reference = require('./reference')\nconst table = require('./table')\n\nconst plugin = function (models) {\n  models.Doc.prototype.html = doc\n\n  models.Section.prototype.html = section\n\n  models.Paragraph.prototype.html = paragraph\n\n  models.Sentence.prototype.html = sentence\n\n  models.Image.prototype.html = image\n\n  models.Infobox.prototype.html = infobox\n\n  models.Link.prototype.html = link\n\n  models.List.prototype.html = list\n\n  models.Reference.prototype.html = reference\n\n  models.Table.prototype.html = table\n\n  // models.Template.html = function(opts) {}\n}\nmodule.exports = plugin\n"],"names":["defaults","title","infoboxes","headers","sections","links","softRedirect","doc","link","redirectTo","href","page","replace","anchor","text","toHtml","options","Object","assign","html","_title","isRedirect","map","i","join","paragraphs","sentences","s","references","c","_01Doc","images","tables","lists","doSection","num","depth","imgs","length","image","t","list","forEach","p","_02Section","_03Paragraph","escapeRegExp","str","smartReplace","all","result","String","reg","RegExp","test","smartReplace_1","require$$0","formatting","doSentence","tag","bolds","italics","_04Sentence","classNames","_05Link","dontDo","caption","alt","signature","infobox","data","keys","k","key","charAt","toUpperCase","substring","val","infobox_1","makeImage","thumbnail","lines","url","encyclopedia","author","first","last","inline","reference","rows","o","table","section","require$$1","paragraph","require$$2","sentence","require$$3","require$$4","require$$5","require$$6","require$$7","require$$8","require$$9","plugin","models","Doc","prototype","Section","Paragraph","Sentence","Image","Infobox","Link","List","Reference","Table","src"],"mappings":"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"}